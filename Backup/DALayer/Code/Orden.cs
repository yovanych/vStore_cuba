
/*
'===============================================================================
'  Generated From - CSharp_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace DALayer
{
	public abstract class _Orden : SqlClientEntity
	{
		public _Orden()
		{
			this.QuerySource = "Orden";
			this.MappingName = "Orden";

		}	

		//=================================================================
		//  public Overrides void AddNew()
		//=================================================================
		//
		//=================================================================
		public override void AddNew()
		{
			base.AddNew();
			
		}
		
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			ListDictionary parameters = null;
			
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_OrdenLoadAll]", parameters);
		}
	
		//=================================================================
		// public Overridable Function LoadByPrimaryKey()  As Boolean
		//=================================================================
		//  Loads a single row of via the primary key
		//=================================================================
		public virtual bool LoadByPrimaryKey(int Id_orden)
		{
			ListDictionary parameters = new ListDictionary();
			parameters.Add(Parameters.Id_orden, Id_orden);

		
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_OrdenLoadByPrimaryKey]", parameters);
		}
		
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter Id_orden
			{
				get
				{
					return new SqlParameter("@Id_orden", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Id_usuario
			{
				get
				{
					return new SqlParameter("@Id_usuario", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Id_estado
			{
				get
				{
					return new SqlParameter("@Id_estado", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Id_tipo_entrega
			{
				get
				{
					return new SqlParameter("@Id_tipo_entrega", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter No_orden
			{
				get
				{
					return new SqlParameter("@No_orden", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Fecha
			{
				get
				{
					return new SqlParameter("@Fecha", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter Id_proveedor
			{
				get
				{
					return new SqlParameter("@Id_proveedor", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Id_distribuidor
			{
				get
				{
					return new SqlParameter("@Id_distribuidor", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Direccion_entrega
			{
				get
				{
					return new SqlParameter("@Direccion_entrega", SqlDbType.VarChar, 500);
				}
			}
			
			public static SqlParameter Comentario
			{
				get
				{
					return new SqlParameter("@Comentario", SqlDbType.VarChar, 1000);
				}
			}
			
			public static SqlParameter Telefono
			{
				get
				{
					return new SqlParameter("@Telefono", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter Email_notificacion
			{
				get
				{
					return new SqlParameter("@Email_notificacion", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter Destinatario
			{
				get
				{
					return new SqlParameter("@Destinatario", SqlDbType.VarChar, 50);
				}
			}
			
		}
		#endregion		
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string Id_orden = "id_orden";
            public const string Id_usuario = "id_usuario";
            public const string Id_estado = "id_estado";
            public const string Id_tipo_entrega = "id_tipo_entrega";
            public const string No_orden = "no_orden";
            public const string Fecha = "fecha";
            public const string Id_proveedor = "id_proveedor";
            public const string Id_distribuidor = "id_distribuidor";
            public const string Direccion_entrega = "direccion_entrega";
            public const string Comentario = "comentario";
            public const string Telefono = "telefono";
            public const string Email_notificacion = "email_notificacion";
            public const string Destinatario = "destinatario";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Id_orden] = _Orden.PropertyNames.Id_orden;
					ht[Id_usuario] = _Orden.PropertyNames.Id_usuario;
					ht[Id_estado] = _Orden.PropertyNames.Id_estado;
					ht[Id_tipo_entrega] = _Orden.PropertyNames.Id_tipo_entrega;
					ht[No_orden] = _Orden.PropertyNames.No_orden;
					ht[Fecha] = _Orden.PropertyNames.Fecha;
					ht[Id_proveedor] = _Orden.PropertyNames.Id_proveedor;
					ht[Id_distribuidor] = _Orden.PropertyNames.Id_distribuidor;
					ht[Direccion_entrega] = _Orden.PropertyNames.Direccion_entrega;
					ht[Comentario] = _Orden.PropertyNames.Comentario;
					ht[Telefono] = _Orden.PropertyNames.Telefono;
					ht[Email_notificacion] = _Orden.PropertyNames.Email_notificacion;
					ht[Destinatario] = _Orden.PropertyNames.Destinatario;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string Id_orden = "Id_orden";
            public const string Id_usuario = "Id_usuario";
            public const string Id_estado = "Id_estado";
            public const string Id_tipo_entrega = "Id_tipo_entrega";
            public const string No_orden = "No_orden";
            public const string Fecha = "Fecha";
            public const string Id_proveedor = "Id_proveedor";
            public const string Id_distribuidor = "Id_distribuidor";
            public const string Direccion_entrega = "Direccion_entrega";
            public const string Comentario = "Comentario";
            public const string Telefono = "Telefono";
            public const string Email_notificacion = "Email_notificacion";
            public const string Destinatario = "Destinatario";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Id_orden] = _Orden.ColumnNames.Id_orden;
					ht[Id_usuario] = _Orden.ColumnNames.Id_usuario;
					ht[Id_estado] = _Orden.ColumnNames.Id_estado;
					ht[Id_tipo_entrega] = _Orden.ColumnNames.Id_tipo_entrega;
					ht[No_orden] = _Orden.ColumnNames.No_orden;
					ht[Fecha] = _Orden.ColumnNames.Fecha;
					ht[Id_proveedor] = _Orden.ColumnNames.Id_proveedor;
					ht[Id_distribuidor] = _Orden.ColumnNames.Id_distribuidor;
					ht[Direccion_entrega] = _Orden.ColumnNames.Direccion_entrega;
					ht[Comentario] = _Orden.ColumnNames.Comentario;
					ht[Telefono] = _Orden.ColumnNames.Telefono;
					ht[Email_notificacion] = _Orden.ColumnNames.Email_notificacion;
					ht[Destinatario] = _Orden.ColumnNames.Destinatario;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion	

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string Id_orden = "s_Id_orden";
            public const string Id_usuario = "s_Id_usuario";
            public const string Id_estado = "s_Id_estado";
            public const string Id_tipo_entrega = "s_Id_tipo_entrega";
            public const string No_orden = "s_No_orden";
            public const string Fecha = "s_Fecha";
            public const string Id_proveedor = "s_Id_proveedor";
            public const string Id_distribuidor = "s_Id_distribuidor";
            public const string Direccion_entrega = "s_Direccion_entrega";
            public const string Comentario = "s_Comentario";
            public const string Telefono = "s_Telefono";
            public const string Email_notificacion = "s_Email_notificacion";
            public const string Destinatario = "s_Destinatario";

		}
		#endregion		
		
		#region Properties
	
		public virtual int Id_orden
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_orden);
			}
			set
	        {
				base.Setint(ColumnNames.Id_orden, value);
			}
		}

		public virtual int Id_usuario
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_usuario);
			}
			set
	        {
				base.Setint(ColumnNames.Id_usuario, value);
			}
		}

		public virtual int Id_estado
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_estado);
			}
			set
	        {
				base.Setint(ColumnNames.Id_estado, value);
			}
		}

		public virtual int Id_tipo_entrega
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_tipo_entrega);
			}
			set
	        {
				base.Setint(ColumnNames.Id_tipo_entrega, value);
			}
		}

		public virtual int No_orden
	    {
			get
	        {
				return base.Getint(ColumnNames.No_orden);
			}
			set
	        {
				base.Setint(ColumnNames.No_orden, value);
			}
		}

		public virtual DateTime Fecha
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.Fecha);
			}
			set
	        {
				base.SetDateTime(ColumnNames.Fecha, value);
			}
		}

		public virtual int Id_proveedor
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_proveedor);
			}
			set
	        {
				base.Setint(ColumnNames.Id_proveedor, value);
			}
		}

		public virtual int Id_distribuidor
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_distribuidor);
			}
			set
	        {
				base.Setint(ColumnNames.Id_distribuidor, value);
			}
		}

		public virtual string Direccion_entrega
	    {
			get
	        {
				return base.Getstring(ColumnNames.Direccion_entrega);
			}
			set
	        {
				base.Setstring(ColumnNames.Direccion_entrega, value);
			}
		}

		public virtual string Comentario
	    {
			get
	        {
				return base.Getstring(ColumnNames.Comentario);
			}
			set
	        {
				base.Setstring(ColumnNames.Comentario, value);
			}
		}

		public virtual string Telefono
	    {
			get
	        {
				return base.Getstring(ColumnNames.Telefono);
			}
			set
	        {
				base.Setstring(ColumnNames.Telefono, value);
			}
		}

		public virtual string Email_notificacion
	    {
			get
	        {
				return base.Getstring(ColumnNames.Email_notificacion);
			}
			set
	        {
				base.Setstring(ColumnNames.Email_notificacion, value);
			}
		}

		public virtual string Destinatario
	    {
			get
	        {
				return base.Getstring(ColumnNames.Destinatario);
			}
			set
	        {
				base.Setstring(ColumnNames.Destinatario, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_Id_orden
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_orden) ? string.Empty : base.GetintAsString(ColumnNames.Id_orden);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_orden);
				else
					this.Id_orden = base.SetintAsString(ColumnNames.Id_orden, value);
			}
		}

		public virtual string s_Id_usuario
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_usuario) ? string.Empty : base.GetintAsString(ColumnNames.Id_usuario);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_usuario);
				else
					this.Id_usuario = base.SetintAsString(ColumnNames.Id_usuario, value);
			}
		}

		public virtual string s_Id_estado
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_estado) ? string.Empty : base.GetintAsString(ColumnNames.Id_estado);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_estado);
				else
					this.Id_estado = base.SetintAsString(ColumnNames.Id_estado, value);
			}
		}

		public virtual string s_Id_tipo_entrega
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_tipo_entrega) ? string.Empty : base.GetintAsString(ColumnNames.Id_tipo_entrega);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_tipo_entrega);
				else
					this.Id_tipo_entrega = base.SetintAsString(ColumnNames.Id_tipo_entrega, value);
			}
		}

		public virtual string s_No_orden
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.No_orden) ? string.Empty : base.GetintAsString(ColumnNames.No_orden);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.No_orden);
				else
					this.No_orden = base.SetintAsString(ColumnNames.No_orden, value);
			}
		}

		public virtual string s_Fecha
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Fecha) ? string.Empty : base.GetDateTimeAsString(ColumnNames.Fecha);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Fecha);
				else
					this.Fecha = base.SetDateTimeAsString(ColumnNames.Fecha, value);
			}
		}

		public virtual string s_Id_proveedor
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_proveedor) ? string.Empty : base.GetintAsString(ColumnNames.Id_proveedor);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_proveedor);
				else
					this.Id_proveedor = base.SetintAsString(ColumnNames.Id_proveedor, value);
			}
		}

		public virtual string s_Id_distribuidor
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_distribuidor) ? string.Empty : base.GetintAsString(ColumnNames.Id_distribuidor);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_distribuidor);
				else
					this.Id_distribuidor = base.SetintAsString(ColumnNames.Id_distribuidor, value);
			}
		}

		public virtual string s_Direccion_entrega
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Direccion_entrega) ? string.Empty : base.GetstringAsString(ColumnNames.Direccion_entrega);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Direccion_entrega);
				else
					this.Direccion_entrega = base.SetstringAsString(ColumnNames.Direccion_entrega, value);
			}
		}

		public virtual string s_Comentario
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Comentario) ? string.Empty : base.GetstringAsString(ColumnNames.Comentario);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Comentario);
				else
					this.Comentario = base.SetstringAsString(ColumnNames.Comentario, value);
			}
		}

		public virtual string s_Telefono
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Telefono) ? string.Empty : base.GetstringAsString(ColumnNames.Telefono);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Telefono);
				else
					this.Telefono = base.SetstringAsString(ColumnNames.Telefono, value);
			}
		}

		public virtual string s_Email_notificacion
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Email_notificacion) ? string.Empty : base.GetstringAsString(ColumnNames.Email_notificacion);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Email_notificacion);
				else
					this.Email_notificacion = base.SetstringAsString(ColumnNames.Email_notificacion, value);
			}
		}

		public virtual string s_Destinatario
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Destinatario) ? string.Empty : base.GetstringAsString(ColumnNames.Destinatario);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Destinatario);
				else
					this.Destinatario = base.SetstringAsString(ColumnNames.Destinatario, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Id_orden
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_orden, Parameters.Id_orden);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_usuario
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_usuario, Parameters.Id_usuario);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_estado
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_estado, Parameters.Id_estado);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_tipo_entrega
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_tipo_entrega, Parameters.Id_tipo_entrega);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter No_orden
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.No_orden, Parameters.No_orden);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Fecha
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Fecha, Parameters.Fecha);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_proveedor
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_proveedor, Parameters.Id_proveedor);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_distribuidor
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_distribuidor, Parameters.Id_distribuidor);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Direccion_entrega
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Direccion_entrega, Parameters.Direccion_entrega);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Comentario
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Comentario, Parameters.Comentario);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Telefono
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Telefono, Parameters.Telefono);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Email_notificacion
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Email_notificacion, Parameters.Email_notificacion);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Destinatario
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Destinatario, Parameters.Destinatario);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Id_orden
		    {
				get
		        {
					if(_Id_orden_W == null)
	        	    {
						_Id_orden_W = TearOff.Id_orden;
					}
					return _Id_orden_W;
				}
			}

			public WhereParameter Id_usuario
		    {
				get
		        {
					if(_Id_usuario_W == null)
	        	    {
						_Id_usuario_W = TearOff.Id_usuario;
					}
					return _Id_usuario_W;
				}
			}

			public WhereParameter Id_estado
		    {
				get
		        {
					if(_Id_estado_W == null)
	        	    {
						_Id_estado_W = TearOff.Id_estado;
					}
					return _Id_estado_W;
				}
			}

			public WhereParameter Id_tipo_entrega
		    {
				get
		        {
					if(_Id_tipo_entrega_W == null)
	        	    {
						_Id_tipo_entrega_W = TearOff.Id_tipo_entrega;
					}
					return _Id_tipo_entrega_W;
				}
			}

			public WhereParameter No_orden
		    {
				get
		        {
					if(_No_orden_W == null)
	        	    {
						_No_orden_W = TearOff.No_orden;
					}
					return _No_orden_W;
				}
			}

			public WhereParameter Fecha
		    {
				get
		        {
					if(_Fecha_W == null)
	        	    {
						_Fecha_W = TearOff.Fecha;
					}
					return _Fecha_W;
				}
			}

			public WhereParameter Id_proveedor
		    {
				get
		        {
					if(_Id_proveedor_W == null)
	        	    {
						_Id_proveedor_W = TearOff.Id_proveedor;
					}
					return _Id_proveedor_W;
				}
			}

			public WhereParameter Id_distribuidor
		    {
				get
		        {
					if(_Id_distribuidor_W == null)
	        	    {
						_Id_distribuidor_W = TearOff.Id_distribuidor;
					}
					return _Id_distribuidor_W;
				}
			}

			public WhereParameter Direccion_entrega
		    {
				get
		        {
					if(_Direccion_entrega_W == null)
	        	    {
						_Direccion_entrega_W = TearOff.Direccion_entrega;
					}
					return _Direccion_entrega_W;
				}
			}

			public WhereParameter Comentario
		    {
				get
		        {
					if(_Comentario_W == null)
	        	    {
						_Comentario_W = TearOff.Comentario;
					}
					return _Comentario_W;
				}
			}

			public WhereParameter Telefono
		    {
				get
		        {
					if(_Telefono_W == null)
	        	    {
						_Telefono_W = TearOff.Telefono;
					}
					return _Telefono_W;
				}
			}

			public WhereParameter Email_notificacion
		    {
				get
		        {
					if(_Email_notificacion_W == null)
	        	    {
						_Email_notificacion_W = TearOff.Email_notificacion;
					}
					return _Email_notificacion_W;
				}
			}

			public WhereParameter Destinatario
		    {
				get
		        {
					if(_Destinatario_W == null)
	        	    {
						_Destinatario_W = TearOff.Destinatario;
					}
					return _Destinatario_W;
				}
			}

			private WhereParameter _Id_orden_W = null;
			private WhereParameter _Id_usuario_W = null;
			private WhereParameter _Id_estado_W = null;
			private WhereParameter _Id_tipo_entrega_W = null;
			private WhereParameter _No_orden_W = null;
			private WhereParameter _Fecha_W = null;
			private WhereParameter _Id_proveedor_W = null;
			private WhereParameter _Id_distribuidor_W = null;
			private WhereParameter _Direccion_entrega_W = null;
			private WhereParameter _Comentario_W = null;
			private WhereParameter _Telefono_W = null;
			private WhereParameter _Email_notificacion_W = null;
			private WhereParameter _Destinatario_W = null;

			public void WhereClauseReset()
			{
				_Id_orden_W = null;
				_Id_usuario_W = null;
				_Id_estado_W = null;
				_Id_tipo_entrega_W = null;
				_No_orden_W = null;
				_Fecha_W = null;
				_Id_proveedor_W = null;
				_Id_distribuidor_W = null;
				_Direccion_entrega_W = null;
				_Comentario_W = null;
				_Telefono_W = null;
				_Email_notificacion_W = null;
				_Destinatario_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Id_orden
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_orden, Parameters.Id_orden);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_usuario
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_usuario, Parameters.Id_usuario);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_estado
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_estado, Parameters.Id_estado);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_tipo_entrega
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_tipo_entrega, Parameters.Id_tipo_entrega);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter No_orden
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.No_orden, Parameters.No_orden);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Fecha
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Fecha, Parameters.Fecha);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_proveedor
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_proveedor, Parameters.Id_proveedor);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_distribuidor
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_distribuidor, Parameters.Id_distribuidor);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Direccion_entrega
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Direccion_entrega, Parameters.Direccion_entrega);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Comentario
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Comentario, Parameters.Comentario);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Telefono
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Telefono, Parameters.Telefono);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Email_notificacion
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Email_notificacion, Parameters.Email_notificacion);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Destinatario
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Destinatario, Parameters.Destinatario);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Id_orden
		    {
				get
		        {
					if(_Id_orden_W == null)
	        	    {
						_Id_orden_W = TearOff.Id_orden;
					}
					return _Id_orden_W;
				}
			}

			public AggregateParameter Id_usuario
		    {
				get
		        {
					if(_Id_usuario_W == null)
	        	    {
						_Id_usuario_W = TearOff.Id_usuario;
					}
					return _Id_usuario_W;
				}
			}

			public AggregateParameter Id_estado
		    {
				get
		        {
					if(_Id_estado_W == null)
	        	    {
						_Id_estado_W = TearOff.Id_estado;
					}
					return _Id_estado_W;
				}
			}

			public AggregateParameter Id_tipo_entrega
		    {
				get
		        {
					if(_Id_tipo_entrega_W == null)
	        	    {
						_Id_tipo_entrega_W = TearOff.Id_tipo_entrega;
					}
					return _Id_tipo_entrega_W;
				}
			}

			public AggregateParameter No_orden
		    {
				get
		        {
					if(_No_orden_W == null)
	        	    {
						_No_orden_W = TearOff.No_orden;
					}
					return _No_orden_W;
				}
			}

			public AggregateParameter Fecha
		    {
				get
		        {
					if(_Fecha_W == null)
	        	    {
						_Fecha_W = TearOff.Fecha;
					}
					return _Fecha_W;
				}
			}

			public AggregateParameter Id_proveedor
		    {
				get
		        {
					if(_Id_proveedor_W == null)
	        	    {
						_Id_proveedor_W = TearOff.Id_proveedor;
					}
					return _Id_proveedor_W;
				}
			}

			public AggregateParameter Id_distribuidor
		    {
				get
		        {
					if(_Id_distribuidor_W == null)
	        	    {
						_Id_distribuidor_W = TearOff.Id_distribuidor;
					}
					return _Id_distribuidor_W;
				}
			}

			public AggregateParameter Direccion_entrega
		    {
				get
		        {
					if(_Direccion_entrega_W == null)
	        	    {
						_Direccion_entrega_W = TearOff.Direccion_entrega;
					}
					return _Direccion_entrega_W;
				}
			}

			public AggregateParameter Comentario
		    {
				get
		        {
					if(_Comentario_W == null)
	        	    {
						_Comentario_W = TearOff.Comentario;
					}
					return _Comentario_W;
				}
			}

			public AggregateParameter Telefono
		    {
				get
		        {
					if(_Telefono_W == null)
	        	    {
						_Telefono_W = TearOff.Telefono;
					}
					return _Telefono_W;
				}
			}

			public AggregateParameter Email_notificacion
		    {
				get
		        {
					if(_Email_notificacion_W == null)
	        	    {
						_Email_notificacion_W = TearOff.Email_notificacion;
					}
					return _Email_notificacion_W;
				}
			}

			public AggregateParameter Destinatario
		    {
				get
		        {
					if(_Destinatario_W == null)
	        	    {
						_Destinatario_W = TearOff.Destinatario;
					}
					return _Destinatario_W;
				}
			}

			private AggregateParameter _Id_orden_W = null;
			private AggregateParameter _Id_usuario_W = null;
			private AggregateParameter _Id_estado_W = null;
			private AggregateParameter _Id_tipo_entrega_W = null;
			private AggregateParameter _No_orden_W = null;
			private AggregateParameter _Fecha_W = null;
			private AggregateParameter _Id_proveedor_W = null;
			private AggregateParameter _Id_distribuidor_W = null;
			private AggregateParameter _Direccion_entrega_W = null;
			private AggregateParameter _Comentario_W = null;
			private AggregateParameter _Telefono_W = null;
			private AggregateParameter _Email_notificacion_W = null;
			private AggregateParameter _Destinatario_W = null;

			public void AggregateClauseReset()
			{
				_Id_orden_W = null;
				_Id_usuario_W = null;
				_Id_estado_W = null;
				_Id_tipo_entrega_W = null;
				_No_orden_W = null;
				_Fecha_W = null;
				_Id_proveedor_W = null;
				_Id_distribuidor_W = null;
				_Direccion_entrega_W = null;
				_Comentario_W = null;
				_Telefono_W = null;
				_Email_notificacion_W = null;
				_Destinatario_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_OrdenInsert]";
	
			CreateParameters(cmd);
			
			SqlParameter p;
			p = cmd.Parameters[Parameters.Id_orden.ParameterName];
			p.Direction = ParameterDirection.Output;
    
			return cmd;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_OrdenUpdate]";
	
			CreateParameters(cmd);
			      
			return cmd;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_OrdenDelete]";
	
			SqlParameter p;
			p = cmd.Parameters.Add(Parameters.Id_orden);
			p.SourceColumn = ColumnNames.Id_orden;
			p.SourceVersion = DataRowVersion.Current;

  
			return cmd;
		}
		
		private IDbCommand CreateParameters(SqlCommand cmd)
		{
			SqlParameter p;
		
			p = cmd.Parameters.Add(Parameters.Id_orden);
			p.SourceColumn = ColumnNames.Id_orden;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Id_usuario);
			p.SourceColumn = ColumnNames.Id_usuario;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Id_estado);
			p.SourceColumn = ColumnNames.Id_estado;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Id_tipo_entrega);
			p.SourceColumn = ColumnNames.Id_tipo_entrega;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.No_orden);
			p.SourceColumn = ColumnNames.No_orden;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Fecha);
			p.SourceColumn = ColumnNames.Fecha;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Id_proveedor);
			p.SourceColumn = ColumnNames.Id_proveedor;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Id_distribuidor);
			p.SourceColumn = ColumnNames.Id_distribuidor;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Direccion_entrega);
			p.SourceColumn = ColumnNames.Direccion_entrega;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Comentario);
			p.SourceColumn = ColumnNames.Comentario;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Telefono);
			p.SourceColumn = ColumnNames.Telefono;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Email_notificacion);
			p.SourceColumn = ColumnNames.Email_notificacion;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Destinatario);
			p.SourceColumn = ColumnNames.Destinatario;
			p.SourceVersion = DataRowVersion.Current;


			return cmd;
		}
	}
}
