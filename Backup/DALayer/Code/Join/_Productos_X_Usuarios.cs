/*
'===============================================================================
'  Generated From - CSharp_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace DALayer
{
	public class _Productos_X_Usuarios : SqlClientEntity
	{
		public _Productos_X_Usuarios()
		{
			this.QuerySource = "_Productos_X_Usuarios";
			this.MappingName = "_Productos_X_Usuarios";
		}	
	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter Id_producto
			{
				get
				{
					return new SqlParameter("@Id_producto", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Nombre_producto
			{
				get
				{
					return new SqlParameter("@Nombre_producto", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter Descripcion
			{
				get
				{
					return new SqlParameter("@Descripcion", SqlDbType.VarChar, 150);
				}
			}
			
			public static SqlParameter Foto
			{
				get
				{
					return new SqlParameter("@Foto", SqlDbType.Image, 2147483647);
				}
			}
			
			public static SqlParameter Id_categoria
			{
				get
				{
					return new SqlParameter("@Id_categoria", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Cantidad
			{
				get
				{
					return new SqlParameter("@Cantidad", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Id_estado
			{
				get
				{
					return new SqlParameter("@Id_estado", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Id_orden
			{
				get
				{
					return new SqlParameter("@Id_orden", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Id_usuario
			{
				get
				{
					return new SqlParameter("@Id_usuario", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Nombre
			{
				get
				{
					return new SqlParameter("@Nombre", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter Id_role
			{
				get
				{
					return new SqlParameter("@Id_role", SqlDbType.Int, 0);
				}
			}
			
		}
		#endregion	
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string Id_producto = "id_producto";
            public const string Nombre_producto = "nombre_producto";
            public const string Descripcion = "descripcion";
            public const string Foto = "foto";
            public const string Id_categoria = "id_categoria";
            public const string Cantidad = "cantidad";
            public const string Id_estado = "id_estado";
            public const string Id_orden = "id_orden";
            public const string Id_usuario = "id_usuario";
            public const string Nombre = "nombre";
            public const string Id_role = "id_role";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Id_producto] = _Productos_X_Usuarios.PropertyNames.Id_producto;
					ht[Nombre_producto] = _Productos_X_Usuarios.PropertyNames.Nombre_producto;
					ht[Descripcion] = _Productos_X_Usuarios.PropertyNames.Descripcion;
					ht[Foto] = _Productos_X_Usuarios.PropertyNames.Foto;
					ht[Id_categoria] = _Productos_X_Usuarios.PropertyNames.Id_categoria;
					ht[Cantidad] = _Productos_X_Usuarios.PropertyNames.Cantidad;
					ht[Id_estado] = _Productos_X_Usuarios.PropertyNames.Id_estado;
					ht[Id_orden] = _Productos_X_Usuarios.PropertyNames.Id_orden;
					ht[Id_usuario] = _Productos_X_Usuarios.PropertyNames.Id_usuario;
					ht[Nombre] = _Productos_X_Usuarios.PropertyNames.Nombre;
					ht[Id_role] = _Productos_X_Usuarios.PropertyNames.Id_role;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string Id_producto = "Id_producto";
            public const string Nombre_producto = "Nombre_producto";
            public const string Descripcion = "Descripcion";
            public const string Foto = "Foto";
            public const string Id_categoria = "Id_categoria";
            public const string Cantidad = "Cantidad";
            public const string Id_estado = "Id_estado";
            public const string Id_orden = "Id_orden";
            public const string Id_usuario = "Id_usuario";
            public const string Nombre = "Nombre";
            public const string Id_role = "Id_role";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Id_producto] = _Productos_X_Usuarios.ColumnNames.Id_producto;
					ht[Nombre_producto] = _Productos_X_Usuarios.ColumnNames.Nombre_producto;
					ht[Descripcion] = _Productos_X_Usuarios.ColumnNames.Descripcion;
					ht[Foto] = _Productos_X_Usuarios.ColumnNames.Foto;
					ht[Id_categoria] = _Productos_X_Usuarios.ColumnNames.Id_categoria;
					ht[Cantidad] = _Productos_X_Usuarios.ColumnNames.Cantidad;
					ht[Id_estado] = _Productos_X_Usuarios.ColumnNames.Id_estado;
					ht[Id_orden] = _Productos_X_Usuarios.ColumnNames.Id_orden;
					ht[Id_usuario] = _Productos_X_Usuarios.ColumnNames.Id_usuario;
					ht[Nombre] = _Productos_X_Usuarios.ColumnNames.Nombre;
					ht[Id_role] = _Productos_X_Usuarios.ColumnNames.Id_role;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string Id_producto = "s_Id_producto";
            public const string Nombre_producto = "s_Nombre_producto";
            public const string Descripcion = "s_Descripcion";
            public const string Foto = "s_Foto";
            public const string Id_categoria = "s_Id_categoria";
            public const string Cantidad = "s_Cantidad";
            public const string Id_estado = "s_Id_estado";
            public const string Id_orden = "s_Id_orden";
            public const string Id_usuario = "s_Id_usuario";
            public const string Nombre = "s_Nombre";
            public const string Id_role = "s_Id_role";

		}
		#endregion	
		
		#region Properties
			public virtual int Id_producto
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_producto);
			}
			set
	        {
				base.Setint(ColumnNames.Id_producto, value);
			}
		}

		public virtual string Nombre_producto
	    {
			get
	        {
				return base.Getstring(ColumnNames.Nombre_producto);
			}
			set
	        {
				base.Setstring(ColumnNames.Nombre_producto, value);
			}
		}

		public virtual string Descripcion
	    {
			get
	        {
				return base.Getstring(ColumnNames.Descripcion);
			}
			set
	        {
				base.Setstring(ColumnNames.Descripcion, value);
			}
		}

		public virtual byte[] Foto
	    {
			get
	        {
				return base.GetByteArray(ColumnNames.Foto);
			}
			set
	        {
				base.SetByteArray(ColumnNames.Foto, value);
			}
		}

		public virtual int Id_categoria
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_categoria);
			}
			set
	        {
				base.Setint(ColumnNames.Id_categoria, value);
			}
		}

		public virtual int Cantidad
	    {
			get
	        {
				return base.Getint(ColumnNames.Cantidad);
			}
			set
	        {
				base.Setint(ColumnNames.Cantidad, value);
			}
		}

		public virtual int Id_estado
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_estado);
			}
			set
	        {
				base.Setint(ColumnNames.Id_estado, value);
			}
		}

		public virtual int Id_orden
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_orden);
			}
			set
	        {
				base.Setint(ColumnNames.Id_orden, value);
			}
		}

		public virtual int Id_usuario
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_usuario);
			}
			set
	        {
				base.Setint(ColumnNames.Id_usuario, value);
			}
		}

		public virtual string Nombre
	    {
			get
	        {
				return base.Getstring(ColumnNames.Nombre);
			}
			set
	        {
				base.Setstring(ColumnNames.Nombre, value);
			}
		}

		public virtual int Id_role
	    {
			get
	        {
				return base.Getint(ColumnNames.Id_role);
			}
			set
	        {
				base.Setint(ColumnNames.Id_role, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_Id_producto
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_producto) ? string.Empty : base.GetintAsString(ColumnNames.Id_producto);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_producto);
				else
					this.Id_producto = base.SetintAsString(ColumnNames.Id_producto, value);
			}
		}

		public virtual string s_Nombre_producto
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Nombre_producto) ? string.Empty : base.GetstringAsString(ColumnNames.Nombre_producto);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Nombre_producto);
				else
					this.Nombre_producto = base.SetstringAsString(ColumnNames.Nombre_producto, value);
			}
		}

		public virtual string s_Descripcion
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Descripcion) ? string.Empty : base.GetstringAsString(ColumnNames.Descripcion);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Descripcion);
				else
					this.Descripcion = base.SetstringAsString(ColumnNames.Descripcion, value);
			}
		}

		public virtual string s_Id_categoria
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_categoria) ? string.Empty : base.GetintAsString(ColumnNames.Id_categoria);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_categoria);
				else
					this.Id_categoria = base.SetintAsString(ColumnNames.Id_categoria, value);
			}
		}

		public virtual string s_Cantidad
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Cantidad) ? string.Empty : base.GetintAsString(ColumnNames.Cantidad);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Cantidad);
				else
					this.Cantidad = base.SetintAsString(ColumnNames.Cantidad, value);
			}
		}

		public virtual string s_Id_estado
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_estado) ? string.Empty : base.GetintAsString(ColumnNames.Id_estado);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_estado);
				else
					this.Id_estado = base.SetintAsString(ColumnNames.Id_estado, value);
			}
		}

		public virtual string s_Id_orden
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_orden) ? string.Empty : base.GetintAsString(ColumnNames.Id_orden);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_orden);
				else
					this.Id_orden = base.SetintAsString(ColumnNames.Id_orden, value);
			}
		}

		public virtual string s_Id_usuario
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_usuario) ? string.Empty : base.GetintAsString(ColumnNames.Id_usuario);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_usuario);
				else
					this.Id_usuario = base.SetintAsString(ColumnNames.Id_usuario, value);
			}
		}

		public virtual string s_Nombre
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Nombre) ? string.Empty : base.GetstringAsString(ColumnNames.Nombre);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Nombre);
				else
					this.Nombre = base.SetstringAsString(ColumnNames.Nombre, value);
			}
		}

		public virtual string s_Id_role
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Id_role) ? string.Empty : base.GetintAsString(ColumnNames.Id_role);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Id_role);
				else
					this.Id_role = base.SetintAsString(ColumnNames.Id_role, value);
			}
		}


		#endregion			
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Id_producto
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_producto, Parameters.Id_producto);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Nombre_producto
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Nombre_producto, Parameters.Nombre_producto);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Descripcion
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Descripcion, Parameters.Descripcion);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Foto
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Foto, Parameters.Foto);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_categoria
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_categoria, Parameters.Id_categoria);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Cantidad
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Cantidad, Parameters.Cantidad);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_estado
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_estado, Parameters.Id_estado);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_orden
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_orden, Parameters.Id_orden);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_usuario
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_usuario, Parameters.Id_usuario);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Nombre
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Nombre, Parameters.Nombre);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Id_role
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Id_role, Parameters.Id_role);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Id_producto
		    {
				get
		        {
					if(_Id_producto_W == null)
	        	    {
						_Id_producto_W = TearOff.Id_producto;
					}
					return _Id_producto_W;
				}
			}

			public WhereParameter Nombre_producto
		    {
				get
		        {
					if(_Nombre_producto_W == null)
	        	    {
						_Nombre_producto_W = TearOff.Nombre_producto;
					}
					return _Nombre_producto_W;
				}
			}

			public WhereParameter Descripcion
		    {
				get
		        {
					if(_Descripcion_W == null)
	        	    {
						_Descripcion_W = TearOff.Descripcion;
					}
					return _Descripcion_W;
				}
			}

			public WhereParameter Foto
		    {
				get
		        {
					if(_Foto_W == null)
	        	    {
						_Foto_W = TearOff.Foto;
					}
					return _Foto_W;
				}
			}

			public WhereParameter Id_categoria
		    {
				get
		        {
					if(_Id_categoria_W == null)
	        	    {
						_Id_categoria_W = TearOff.Id_categoria;
					}
					return _Id_categoria_W;
				}
			}

			public WhereParameter Cantidad
		    {
				get
		        {
					if(_Cantidad_W == null)
	        	    {
						_Cantidad_W = TearOff.Cantidad;
					}
					return _Cantidad_W;
				}
			}

			public WhereParameter Id_estado
		    {
				get
		        {
					if(_Id_estado_W == null)
	        	    {
						_Id_estado_W = TearOff.Id_estado;
					}
					return _Id_estado_W;
				}
			}

			public WhereParameter Id_orden
		    {
				get
		        {
					if(_Id_orden_W == null)
	        	    {
						_Id_orden_W = TearOff.Id_orden;
					}
					return _Id_orden_W;
				}
			}

			public WhereParameter Id_usuario
		    {
				get
		        {
					if(_Id_usuario_W == null)
	        	    {
						_Id_usuario_W = TearOff.Id_usuario;
					}
					return _Id_usuario_W;
				}
			}

			public WhereParameter Nombre
		    {
				get
		        {
					if(_Nombre_W == null)
	        	    {
						_Nombre_W = TearOff.Nombre;
					}
					return _Nombre_W;
				}
			}

			public WhereParameter Id_role
		    {
				get
		        {
					if(_Id_role_W == null)
	        	    {
						_Id_role_W = TearOff.Id_role;
					}
					return _Id_role_W;
				}
			}

			private WhereParameter _Id_producto_W = null;
			private WhereParameter _Nombre_producto_W = null;
			private WhereParameter _Descripcion_W = null;
			private WhereParameter _Foto_W = null;
			private WhereParameter _Id_categoria_W = null;
			private WhereParameter _Cantidad_W = null;
			private WhereParameter _Id_estado_W = null;
			private WhereParameter _Id_orden_W = null;
			private WhereParameter _Id_usuario_W = null;
			private WhereParameter _Nombre_W = null;
			private WhereParameter _Id_role_W = null;

			public void WhereClauseReset()
			{
				_Id_producto_W = null;
				_Nombre_producto_W = null;
				_Descripcion_W = null;
				_Foto_W = null;
				_Id_categoria_W = null;
				_Cantidad_W = null;
				_Id_estado_W = null;
				_Id_orden_W = null;
				_Id_usuario_W = null;
				_Nombre_W = null;
				_Id_role_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Id_producto
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_producto, Parameters.Id_producto);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Nombre_producto
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Nombre_producto, Parameters.Nombre_producto);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Descripcion
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Descripcion, Parameters.Descripcion);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Foto
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Foto, Parameters.Foto);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_categoria
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_categoria, Parameters.Id_categoria);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Cantidad
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Cantidad, Parameters.Cantidad);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_estado
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_estado, Parameters.Id_estado);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_orden
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_orden, Parameters.Id_orden);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_usuario
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_usuario, Parameters.Id_usuario);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Nombre
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Nombre, Parameters.Nombre);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Id_role
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Id_role, Parameters.Id_role);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Id_producto
		    {
				get
		        {
					if(_Id_producto_W == null)
	        	    {
						_Id_producto_W = TearOff.Id_producto;
					}
					return _Id_producto_W;
				}
			}

			public AggregateParameter Nombre_producto
		    {
				get
		        {
					if(_Nombre_producto_W == null)
	        	    {
						_Nombre_producto_W = TearOff.Nombre_producto;
					}
					return _Nombre_producto_W;
				}
			}

			public AggregateParameter Descripcion
		    {
				get
		        {
					if(_Descripcion_W == null)
	        	    {
						_Descripcion_W = TearOff.Descripcion;
					}
					return _Descripcion_W;
				}
			}

			public AggregateParameter Foto
		    {
				get
		        {
					if(_Foto_W == null)
	        	    {
						_Foto_W = TearOff.Foto;
					}
					return _Foto_W;
				}
			}

			public AggregateParameter Id_categoria
		    {
				get
		        {
					if(_Id_categoria_W == null)
	        	    {
						_Id_categoria_W = TearOff.Id_categoria;
					}
					return _Id_categoria_W;
				}
			}

			public AggregateParameter Cantidad
		    {
				get
		        {
					if(_Cantidad_W == null)
	        	    {
						_Cantidad_W = TearOff.Cantidad;
					}
					return _Cantidad_W;
				}
			}

			public AggregateParameter Id_estado
		    {
				get
		        {
					if(_Id_estado_W == null)
	        	    {
						_Id_estado_W = TearOff.Id_estado;
					}
					return _Id_estado_W;
				}
			}

			public AggregateParameter Id_orden
		    {
				get
		        {
					if(_Id_orden_W == null)
	        	    {
						_Id_orden_W = TearOff.Id_orden;
					}
					return _Id_orden_W;
				}
			}

			public AggregateParameter Id_usuario
		    {
				get
		        {
					if(_Id_usuario_W == null)
	        	    {
						_Id_usuario_W = TearOff.Id_usuario;
					}
					return _Id_usuario_W;
				}
			}

			public AggregateParameter Nombre
		    {
				get
		        {
					if(_Nombre_W == null)
	        	    {
						_Nombre_W = TearOff.Nombre;
					}
					return _Nombre_W;
				}
			}

			public AggregateParameter Id_role
		    {
				get
		        {
					if(_Id_role_W == null)
	        	    {
						_Id_role_W = TearOff.Id_role;
					}
					return _Id_role_W;
				}
			}

			private AggregateParameter _Id_producto_W = null;
			private AggregateParameter _Nombre_producto_W = null;
			private AggregateParameter _Descripcion_W = null;
			private AggregateParameter _Foto_W = null;
			private AggregateParameter _Id_categoria_W = null;
			private AggregateParameter _Cantidad_W = null;
			private AggregateParameter _Id_estado_W = null;
			private AggregateParameter _Id_orden_W = null;
			private AggregateParameter _Id_usuario_W = null;
			private AggregateParameter _Nombre_W = null;
			private AggregateParameter _Id_role_W = null;

			public void AggregateClauseReset()
			{
				_Id_producto_W = null;
				_Nombre_producto_W = null;
				_Descripcion_W = null;
				_Foto_W = null;
				_Id_categoria_W = null;
				_Cantidad_W = null;
				_Id_estado_W = null;
				_Id_orden_W = null;
				_Id_usuario_W = null;
				_Nombre_W = null;
				_Id_role_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
			return null;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
			return null;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
			return null;
		}
	}
}
